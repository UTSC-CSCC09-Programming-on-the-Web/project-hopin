name: Publish Frontend to GHCR & Deploy on VM

on:
  push:
    # Only run this workflow if it is a commit to main.
    branches:
      - main
      - feat/deploy
    # Only run this workflow if the commit has modified files from frontend
    # paths:
    #   - frontend/**

env:
  IMAGE_NAME: frontend-hopin

jobs:
  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  push:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    defaults:
      run:
        working-directory: frontend

    steps:
      - uses: actions/checkout@v2

      - name: Create .env file for frontend
        run: |
          echo "${{ secrets.FRONTEND_ENV }}" > .env

      - name: Build image
        run: docker build . --file Dockerfile --tag $IMAGE_NAME

      - name: Log into GitHub Container Registry
        # TODO: Create a Personal Access Tokens (PAT) with `read:packages` and `write:packages` scopes and save it as an Actions secret `CR_PAT`
        run: echo "${{ secrets.CR_PAT }}" | docker login https://ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Push image to GitHub Container Registry
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME
          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          # Use Docker `latest` tag convention
          [[ "$VERSION" == "main" || "$VERSION" == "deploy" ]] && VERSION=latest
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION

      - name: Deploy on VM using SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VM_HOST }}
          username: ${{ secrets.VM_USER }}
          key: ${{ secrets.VM_SSH_KEY }}
          passphrase: ${{ secrets.VM_SSH_KEY_PASSPHRASE}}
          script: |
            echo "${{ secrets.CR_PAT }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
            docker pull ghcr.io/utsc-cscc09-programming-on-the-web/frontend-hopin:latest
            docker stop frontend || true
            docker rm frontend || true
            docker run -d --name frontend ghcr.io/utsc-cscc09-programming-on-the-web/frontend-hopin:latest
